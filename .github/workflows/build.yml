name: Build

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:

# Based on https://github.com/msys2/setup-msys2/blob/main/examples/cmake.yml
  Windows-MSYS:
    name: ${{ matrix.icon }} windows (${{matrix.build-type}}, ${{matrix.compiler}}, ${{ matrix.target }})
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:

        icon: ['ðŸŸ¦']
        sys: [ucrt64]
        runs-on: ["windows-latest"]
        compiler: ["gcc"]
        build-type: ["DBG", "REL"]
        target : ["all"]
    
    defaults:
      run:
        shell: msys2 {0}
    steps:

    - name: 'ðŸ§° Checkout'
      uses: actions/checkout@v4

    - name: '${{ matrix.icon }} Setup MSYS2'
      uses: msys2/setup-msys2@v2.27.0
      with:
        msystem: ${{matrix.sys}}
        update: true
        install: >-
          git
          make
        pacboy: >-
          toolchain:p
          cmake:p
          ninja:p

    - name: 'Configure'
      run: cmake --preset ${{matrix.compiler}}_${{matrix.build-type}}

    - name: 'ðŸš§ Build'
      run: cmake --build build --target ${{matrix.target}}


# Based on https://github.com/tcbrindle/flux/blob/main/.github/workflows/linux.yml
  Linux-Ubuntu:
    name: ${{ matrix.icon }} linux (${{matrix.build-type}}, ${{matrix.compiler}} ${{matrix.compiler-ver}}, ${{ matrix.target }})
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:

        icon: ['ðŸŸ§']
        sys: [ubuntu]
        runs-on: ["ubuntu-latest"]
        compiler: ["gcc", "clang"]
        build-type: ["DBG", "REL"]
        target : ["all"]
        include:
          - compiler: "gcc"
            compiler-ver: "14"
            cxx: g++-14
            install: |
              sudo apt install gcc-14 g++-14
              sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-14 100 --slave /usr/bin/g++ g++ /usr/bin/g++-14 --slave /usr/bin/gcov gcov /usr/bin/gcov-14
              sudo update-alternatives --set gcc /usr/bin/gcc-14

          - compiler: "clang"
            compiler-ver: "20"
            cxx: $(brew --prefix llvm@20)/bin/clang++
            install: |
              brew install llvm@20

    steps:
    - name: 'ðŸ§° Checkout'
      uses: actions/checkout@v4

    - name: Set up Homebrew
      uses: Homebrew/actions/setup-homebrew@master

    - name: Create Build Environment
      run: |
        ${{matrix.install}}

    - name: Configure
      run: |
        cmake --preset ${{matrix.compiler}}_${{matrix.build-type}}

    - name: 'ðŸš§ Build'
      run: cmake --build build --target ${{matrix.target}}


  macOS:
    name: ${{ matrix.icon }} macos (${{matrix.build-type}}, ${{matrix.compiler}} ${{matrix.compiler-ver}}, ${{ matrix.target }})
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:

        icon: ['â¬›']
        sys: [macOS]
        runs-on: ["macos-latest"]
        compiler: ["gcc"]
        build-type: ["DBG", "REL"]
        target : ["all"]
        include:
          - compiler: "gcc"
            compiler-ver: "14"
            cmake-override: "-DCMAKE_C_COMPILER=gcc-14 -DCMAKE_CXX_COMPILER=g++-14"
            install:

    steps:
    - name: 'ðŸ§° Checkout'
      uses: actions/checkout@v4

    - name: Create Build Environment
      run: |
        ${{matrix.install}}

    - name: Configure
      run: |
        cmake --preset ${{matrix.compiler}}_${{matrix.build-type}} ${{matrix.cmake-override}}

    - name: 'ðŸš§ Build'
      run: cmake --build build --target ${{matrix.target}}