name: publish

on:
  workflow_dispatch:

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      build_type: ${{ steps.build.outputs.build_type }}
    steps:
      # Nightly uses RelWithDebInfo while stable uses Release (which disables
      # asserts). This helps get better debug info from people brave enough to
      # use the nightly builds.
      # - if: github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.tag_name != 'nightly')
      #  run: |
      #    echo 'CMAKE_BUILD_TYPE=Release' >> $GITHUB_ENV
      #    echo 'APPIMAGE_TAG=latest' >> $GITHUB_ENV
      #- if: github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && github.event.inputs.tag_name == 'nightly')
      #  run: |
      #    echo 'CMAKE_BUILD_TYPE=RelWithDebInfo' >> $GITHUB_ENV
      #    echo 'APPIMAGE_TAG=nightly' >> $GITHUB_ENV
      - name: Export build information
        id: build
        run: |
          printf "build_type=Release\n" >> $GITHUB_OUTPUT



  # Based on https://github.com/msys2/setup-msys2/blob/main/examples/cmake.yml
  Windows-MSYS:
    needs: setup
    name: ${{ matrix.icon }} windows (${{matrix.build-type}}, ${{matrix.compiler}}, ${{ matrix.target }}, ${{ needs.setup.outputs.build_type }})
    runs-on: ${{ matrix.runs-on }}
    strategy:
      fail-fast: false
      matrix:

        icon: ['ðŸŸ¦']
        sys: [ucrt64]
        runs-on: ["windows-2025"]
        compiler: ["gcc"]
        build-type: ["REL"]
        target : ["incplot_scratchpad"]
        cmake-override: [""]
        include:
          - compiler: "gcc"
            add-to-pacboy: ""

    
    defaults:
      run:
        shell: msys2 {0}
    steps:

    - name: 'ðŸ§° Checkout'
      uses: actions/checkout@v4

    - name: '${{ matrix.icon }} Setup MSYS2'
      uses: msys2/setup-msys2@v2.27.0
      with:
        msystem: ${{matrix.sys}}
        update: true
        install: >-
          git
          make
        pacboy: >-
          toolchain:p
          ${{matrix.add-to-pacboy}}
          cmake:p
          ninja:p

    - name: 'Configure'
      run: cmake --preset ${{matrix.compiler}}_${{matrix.build-type}} ${{matrix.cmake-override}}

    - name: 'ðŸš§ Build'
      run: cmake --build build --target ${{matrix.target}}

    - uses: actions/upload-artifact@v4
      with:
        name: incplot-MSYS-x64
        path: |
          build/demos/incplot_scratchpad.exe
        retention-days: 1


  publish:
    needs: [Windows-MSYS]
    runs-on: ubuntu-latest
    env:
      GH_REPO: ${{ github.repository }}
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    permissions:
      contents: write
    steps:
      # Must perform checkout first, since it deletes the target directory
      # before running, and would therefore delete the downloaded artifacts
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4

      - name: Install dependencies
        run: sudo apt-get update && sudo apt-get install -y gettext-base

      - run: |
          (echo 'SUBJECT=Incplot release build';
           echo 'PRERELEASE=') >> $GITHUB_ENV
          gh release delete stable --yes || true
          git push origin :stable || true
      # `sha256sum` outputs <sha> <path>, so we cd into each dir to drop the
      # containing folder from the output.
      - run: |
          for i in incplot*; do
              (
                  cd $i || exit
                  sha256sum * >> $GITHUB_WORKSPACE/shasum.txt
              )
          done
      - name: Publish release
        run: |
            gh release create stable $PRERELEASE --title "$SUBJECT" --target $GITHUB_SHA incplot-MSYS-x64/*  shasum.txt
